package io.github.cdsap.projectgenerator.writer

import io.github.cdsap.projectgenerator.model.Gradle
import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.io.TempDir
import java.io.File


class GradleWrapperTest {

    @TempDir
    lateinit var tempDir: File


    @Test
    fun `installGradleVersion should unzip files and make them executable`() {

        val gradle = Gradle.GRADLE_9_0_0
        val gradleWrapper = GradleWrapper(gradle)

        gradleWrapper.installGradleVersion(tempDir.absolutePath)

        val expectedBaseDir = File(tempDir, "gradle")
        assertTrue(expectedBaseDir.exists(), "Base directory 'gradle' should be created")
        assertTrue(expectedBaseDir.isDirectory, "'gradle' should be a directory")

        val gradlewFile = File(tempDir, "gradlew")
        assertTrue(gradlewFile.exists(), "gradlew file should exist")
        assertTrue(gradlewFile.isFile, "gradlew should be a file")
        assertTrue(gradlewFile.canExecute(), "gradlew file should be executable")
        assertTrue(gradlewFile.readText().contains("Gradle start up script for POSIX generated by Gradle"))

    }


}
